---
import '@/styles/globals.css';

import { ClientRouter } from 'astro:transitions';

import Footer from '@/components/Footer.astro';
import Cursor from '../components/Cursor.astro';
import NavBar from '../components/NavBar.astro';


interface Props {
	title: string;
}

const { title } = Astro.props;
---
<script is:inline>
  function setDarkMode(document) {
    const getThemePreference = () => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme');
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'theme-light';
    };
    const isDark = getThemePreference() === 'dark';
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'theme-light');
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class'],
      });
    }
  }

  setDarkMode(document);

  document.addEventListener('astro:before-swap', (ev) => {
    // Pass the incoming document to set the theme on it
    setDarkMode(ev.newDocument);
  });
</script>

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="TomÃ¡s Hurrell Portfolio" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ClientRouter />
	</head>
	<body>
		<Cursor />
		<NavBar />
		<div class="mt-14">
			<slot />
		</div>
	</body>
	<Footer />
</html>
<style is:global>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
		cursor: none !important;
		scrollbar-width: none;
	}
</style>
